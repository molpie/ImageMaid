# Build stage
FROM python:3.11-alpine AS builder
ARG BRANCH_NAME=master
ENV BRANCH_NAME=${BRANCH_NAME}

# Install build dependencies and compile Python packages
RUN echo "**** install build dependencies ****" \
 && apk update \
 && apk upgrade \
 && apk add --no-cache --virtual .build-deps \
    gcc g++ musl-dev \
    libxml2-dev libxslt-dev \
    zlib-dev libjpeg-turbo-dev \
    linux-headers

# Copy and install Python requirements
COPY requirements.txt .
RUN pip3 install --no-cache-dir --upgrade setuptools wheel \
 && pip3 install --no-cache-dir --user --upgrade --requirement requirements.txt

# Runtime stage
FROM python:3.11-alpine
ARG BRANCH_NAME=master
ENV BRANCH_NAME=${BRANCH_NAME}
ENV TINI_VERSION=v0.19.0
ENV KOMETA_DOCKER=True

# Install only runtime dependencies
RUN echo "**** install runtime packages ****" \
 && apk update \
 && apk upgrade \
 && apk add --no-cache tzdata tini \
 && rm -rf /tmp/* /var/tmp/* /var/cache/apk/*

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Set Python path to include user packages
ENV PATH=/root/.local/bin:$PATH

# Copy application code
COPY . /

VOLUME /config

# Create non-root user
RUN adduser -D appuser && chown -R appuser:appuser /app
USER appuser

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD pgrep -f "python" > /dev/null || exit 1

# Tini is now available at /sbin/tini
ENTRYPOINT ["/sbin/tini", "--"]
# Run your program under Tini
CMD ["python3", "imagemaid.py"]
